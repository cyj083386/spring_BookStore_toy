<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller, @ReauestMapping 등 programming model(컨트롤러 매핑 설정), handlerMapping과 handlerAdapter 빈 객체도 자동등록 -->
	<annotation-driven enable-matrix-variables="true"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up !static resources! in the ${webappRoot}/resources directory (js, css등)-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- handlerMapping 은 클라이언트 요청을 처리할 컨트롤러를 결정하여 dispatcher servlet에 반환	-->
	<!-- 자바클래스들을 스프링 빈 객체로 등록-->
	<context:component-scan base-package="kr.co.chunjae.*" />

	<!--스프링의 멀티파트 기능을 이용하기 위한 MultipartResolver 등록-->
	<beans:bean id="multipartResolver"
				class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10240000" />
<!--		<beans:property name="defaultEncoding" value="utf-8" />-->
<!--		<beans:property name="uploadTempDir" ref="uploadDirResource" />-->
	</beans:bean>
	<resources mapping="/upload/**" location="file:///C:/upload/" />
<!--	<beans:bean id="uploadDirResource"-->
<!--				class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="C:/upload"/>-->
<!--	</beans:bean>-->
	<interceptors>
		<beans:bean class= "kr.co.chunjae.interceptor.MonitoringInterceptor"/>
		<beans:bean class= "kr.co.chunjae.interceptor.AuditingInterceptor"/>
	</interceptors>


	<beans:bean id= "messageSource"
				class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="messages"/>
		<beans:property name="defaultEncoding" value="UTF-8" />

	</beans:bean>

<!--	<beans:bean id="validator"  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
<!--		<beans:property name="validationMessageSource" ref="messageSource" />-->
<!--	</beans:bean>-->

<!--	<beans:bean id="unitsInStockValidator"-->
<!--				class="com.springmvc.validator.UnitsInStockValidator"/>-->
<!--	<beans:bean id="bookValidator" class="com.springmvc.validator.BookValidator">-->
<!--		<beans:property name = "springValidators">-->
<!--			<beans:set>-->
<!--				<beans:ref bean = "unitsInStockValidator"/>-->
<!--			</beans:set>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
</beans:beans>
